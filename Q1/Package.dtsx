<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/16/2025 1:07:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MONEM-ZENBOOK"
  DTS:CreatorName="MONEM-ZENBOOK\abdoe"
  DTS:DTSID="{8B2B54AD-2711-4BE7-829D-45B31D54B3F9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="17"
  DTS:VersionGUID="{6FE2B8A1-1FF9-4655-BFA2-E42DA8252AFB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0EDB0131-6C32-4B96-8DD7-8DF17A9E33E1}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bf5ac3de5ff84c3daf1aad2953b20758"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Settings.get_Default():ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Sett" +
    "ings")]

namespace ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;

using System.Net.Http;

using Newtonsoft.Json;
#endregion

namespace ST_bf5ac3de5ff84c3daf1aad2953b20758
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public class University
        {
            public string name { get; set; }
            public string country { get; set; }
            public string alpha_two_code { get; set; }
        }

        public void Main()
        {
            try
            {
                string apiUrl = "http://universities.hipolabs.com/search?country=EGYPT";

                HttpClient client = new HttpClient();
                client.Timeout = TimeSpan.FromSeconds(30);


                var httpResponse = client.GetAsync(apiUrl).Result;
                httpResponse.EnsureSuccessStatusCode();

                var response = httpResponse.Content.ReadAsStringAsync().Result;


                var universities = JsonConvert.DeserializeObject<List<University>>(response);


                string connectionString = "Data Source=ROQAIA\\SQLEXPRESS;Initial Catalog=universityDB;User ID=university_user;Password=12345678;";


                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    conn.Open();

                    foreach (var uni in universities)
                    {
                        string query = @"INSERT INTO University (Name, Country, Alpha_Two_Code) 
                                 VALUES (@Name, @Country, @AlphaTwoCode)";
                        using (SqlCommand cmd = new SqlCommand(query, conn))
                        {
                            cmd.Parameters.AddWithValue("@Name", uni.name ?? "");
                            cmd.Parameters.AddWithValue("@Country", uni.country ?? "");
                            cmd.Parameters.AddWithValue("@AlphaTwoCode", uni.alpha_two_code ?? "");
                            cmd.ExecuteNonQuery();
                        }
                    }

                    conn.Close();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                string message = ex.Message;
                if (ex.InnerException != null)
                    message += "\nInner: " + ex.InnerException.Message;

                MessageBox.Show("ERROR: " + message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bf5ac3de5ff84c3daf1aad2953b20758</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bf5ac3de5ff84c3daf1aad2953b20758</msb:DisplayName>
    <msb:ProjectId>{58EF8455-7B12-447C-BE25-5B2BBA822029}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_bf5ac3de5ff84c3daf1aad2953b20758.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bf5ac3de5ff84c3daf1aad2953b20758")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_bf5ac3de5ff84c3daf1aad2953b20758")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_bf5ac3de5ff84c3daf1aad2953b20758.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4CAAF637-D426-40D7-8857-5637C225E927}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_bf5ac3de5ff84c3daf1aad2953b20758</RootNamespace>
    <AssemblyName>ST_bf5ac3de5ff84c3daf1aad2953b20758</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\roqai\.nuget\packages\newtonsoft.json\13.0.3\lib\net6.0\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bf5ac3de5ff84c3daf1aad2953b20758.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_bf5ac3de5ff84c3daf1aad2953b20758.dll">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
oAQeAREAyAEiAREA8wAmAQEArwAqAQEAxQAqAQEAjwAqAQYGPAAtAVaA1gYwAVaAqAEwAVAgAAAA
AIYAwAQGAAEAQCIAAAAAhhi0BQYAAQBIIgAAAACDGLQFBgABAFAiAAAAAJMIhQU0AQEAfCIAAAAA
kwiwATkBAQCDIgAAAACTCLwBPgEBAIsiAAAAAJYIDQdEAQIAkiIAAAAAhhi0BQYAAgCaIgAAAACR
GLoFSQECAKYiAAAAAIYIkQG8AAIAriIAAAAAhgiaARAAAgC3IgAAAACGCNMHvAADAL8iAAAAAIYI
3wcQAAMAyCIAAAAAhggbAbwABADQIgAAAACGCC4BEAAEAEgiAAAAAIYYtAUGAAUAAAABANUDAAAB
ANUDAAABANUDAAABANUDCQC0BQEAEQC0BQYAGQC0BQoAKQC0BRAAMQC0BRAAOQC0BRAAQQC0BRAA
SQC0BRAAUQC0BRAAWQC0BRAAYQC0BRAAaQC0BQYAqQC0BQYAuQC0BQYA2QC0BRUA6QC0BQYA8QDU
BTQA6QCRBzoA6QCGAEAADAAZB1MAAQEDAVgAAQFtB14ACQF0AGQAFAAZB1MAEQH7BnIAgQC0BRAA
GQG1BAYAHACmBYkAJABhB1MAkQC0BZkAkQDHBqAAIQHIA6YAMQHDB64AOQESAgYAJACdB7IAGQEM
AgYAcQDeBrYAQQExBwEAmQBBAbwAmQAzBcAASQH0BsUASQH0BswAUQGmB9IAcQC0BQYAoQC0BQYA
YQF/AdkAYQG2B+IAwQC0BegA4QC0BQYACAAgABQBCAAkABkBKQB7AIgBLgALAGABLgATAGkBLgAb
AIgBLgAjAJEBLgArALoBLgAzALoBLgA7AMABLgBDAJEBLgBLAMgBLgBTALoBLgBbAOEBQwBjABkB
SQB7AIgBYQBrABkBYwBzABkBgQBrABkBoQBrABkBwQBrABkBQAFrABkBYAFrABkBgAFrABkBoAFr
ABkBwAFrABkB4AFrABkBGwADAAEABAADAAUABAAAAIkFTQEAANABUgEAABEHVwEAAJ4BXAEAAOMH
XAEAADIBXAECAAQAAwACAAUABQABAAYABQACAAcABwACAAoACQABAAsACQACAAwACwABAA0ACwAC
AA4ADQABAA8ADQBLAGwAggCSAASAAAABAAAAFSQnlAAAAAAAAA8AAAAEAAAAAAAAAAAAAADwAFAA
AAAAABAAAAAAAAAAAAAAAPkA/AMAAAAABAAAAAAAAAAAAAAA8ABEAAAAAAAEAAAAAAAAAAAAAADw
AJQEAAAAAAQAAgAAAAAAAAAAAAIBdQUAAAAADQAAAAAAAAAAAAAACwFZBQAAAAAEAAAAAAAAAAAA
AADwALIGAAAAAAAAAAABAAAAEQYAAAUAAgAGAAIAMwB5AAAAAAAAVGFza2AxAExpc3RgMQBTVF9i
ZjVhYzNkZTVmZjg0YzNkYWYxYWFkMjk1M2IyMDc1OAA8TW9kdWxlPgB2YWx1ZV9fAFN5c3RlbS5E
YXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5j
AEdldEFzeW5jADxhbHBoYV90d29fY29kZT5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2lu
Z0ZpZWxkADxjb3VudHJ5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZh
dWx0SW5zdGFuY2UARW5zdXJlU3VjY2Vzc1N0YXR1c0NvZGUAZ2V0X2FscGhhX3R3b19jb2RlAHNl
dF9hbHBoYV90d29fY29kZQBnZXRfTWVzc2FnZQBIdHRwUmVzcG9uc2VNZXNzYWdlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9uYW1lAHNldF9uYW1l
AFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNU
QVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERp
c3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmY1YWMzZGU1ZmY4NGMzZGFmMWFhZDI5
NTNiMjA3NTguZGxsAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRpbWVTcGFuAE9wZW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9u
AGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29mdC5Kc29uAEN1
bHR1cmVJbmZvAFN5c3RlbS5OZXQuSHR0cABnZXRfUmVzb3VyY2VNYW5hZ2VyAFNxbFBhcmFtZXRl
cgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARnJvbVNlY29u
ZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Jm
NWFjM2RlNWZmODRjM2RhZjFhYWQyOTUzYjIwNzU4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9iZjVhYzNkZTVmZjg0YzNkYWYxYWFkMjk1M2IyMDc1OC5Q
cm9wZXJ0aWVzAFNldHRpbmdzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAU3lzdGVtLldpbmRvd3Mu
Rm9ybXMAZ2V0X1BhcmFtZXRlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0
AERlc2VyaWFsaXplT2JqZWN0AGdldF9EZWZhdWx0AGdldF9SZXN1bHQARGlhbG9nUmVzdWx0AHNl
dF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABIdHRwQ2xpZW50AGdldF9DdXJyZW50
AGdldF9Db250ZW50AEh0dHBDb250ZW50AEpzb25Db252ZXJ0AHNldF9UaW1lb3V0AE1vdmVOZXh0
AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AGdldF9jb3VudHJ5
AHNldF9jb3VudHJ5AFVuaXZlcnNpdHkAAAAAa2gAdAB0AHAAOgAvAC8AdQBuAGkAdgBlAHIAcwBp
AHQAaQBlAHMALgBoAGkAcABvAGwAYQBiAHMALgBjAG8AbQAvAHMAZQBhAHIAYwBoAD8AYwBvAHUA
bgB0AHIAeQA9AEUARwBZAFAAVAAAgMtEAGEAdABhACAAUwBvAHUAcgBjAGUAPQBSAE8AUQBBAEkA
QQBcAFMAUQBMAEUAWABQAFIARQBTAFMAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9
AHUAbgBpAHYAZQByAHMAaQB0AHkARABCADsAVQBzAGUAcgAgAEkARAA9AHUAbgBpAHYAZQByAHMA
aQB0AHkAXwB1AHMAZQByADsAUABhAHMAcwB3AG8AcgBkAD0AMQAyADMANAA1ADYANwA4ADsAAIED
SQBOAFMARQBSAFQAIABJAE4AVABPACAAVQBuAGkAdgBlAHIAcwBpAHQAeQAgACgATgBhAG0AZQAs
ACAAQwBvAHUAbgB0AHIAeQAsACAAQQBsAHAAaABhAF8AVAB3AG8AXwBDAG8AZABlACkAIAANAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAVgBBAEwAVQBFAFMAIAAoAEAATgBhAG0AZQAsACAAQABDAG8AdQBuAHQAcgB5ACwA
IABAAEEAbABwAGgAYQBUAHcAbwBDAG8AZABlACkAAAtAAE4AYQBtAGUAAAEAEUAAQwBvAHUAbgB0
AHIAeQAAG0AAQQBsAHAAaABhAFQAdwBvAEMAbwBkAGUAABEKAEkAbgBuAGUAcgA6ACAAAA9FAFIA
UgBPAFIAOgAgAABxUwBUAF8AYgBmADUAYQBjADMAZABlADUAZgBmADgANABjADMAZABhAGYAMQBh
AGEAZAAyADkANQAzAGIAMgAwADcANQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAH39cMFkAX0OZldQHIMU+KwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaRgH
CA4VEj0BEhQSQRURRQESFBIUEkkSTQ4FAAEReQ0FIAEBEXkKIAEVEn0BEoCBDgcVEn0BEoCBBCAA
EwAFIAASgIEFIAASgIUHIAAVEn0BDgUVEn0BDgYQAQEeAA4ICgEVEj0BEhQGFRI9ARIUCCAAFRFF
ARMABhURRQESFAYgAgEOEkEFIAASgJEHIAISgJUOHAMgAAgDIAACBSAAEoChAyAADgQgABJNBgAD
Dg4ODgUAAg4ODgYAARGArQ4IAAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDM
kQiwP19/EdUKOggwrU/msqau7QQAAAAABAEAAAADBhJhAwYSZQMGEhACBg4CBggDBhEYBAAAEmEE
AAASZQUAAQESZQQAABIQAwAAAQQIABJhBAgAEmUECAASEAMoAA4IAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2JmNWFjM2RlNWZmODRjM2RhZjFh
YWQyOTUzYjIwNzU4AAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDI1AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAbDcAAAAAAAAAAAAAhjcAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHg3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAIgQAAAAAAAAAAAAAIgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABACeUFSQAAAEAJ5QVJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBIIDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAF4DAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZgA1AGEAYwAzAGQAZQA1AGYAZgA4ADQAYwAzAGQAYQBmADEAYQBhAGQAMgA5
ADUAMwBiADIAMAA3ADUAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADIAMwA3AC4AMwA3ADkAMgA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZgA1AGEAYwAzAGQAZQA1AGYAZgA4ADQAYwAzAGQAYQBmADEAYQBhAGQAMgA5ADUA
MwBiADIAMAA3ADUAOAAuAGQAbABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEA
bABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfAGIAZgA1AGEAYwAzAGQAZQA1AGYAZgA4ADQAYwAzAGQAYQBmADEA
YQBhAGQAMgA5ADUAMwBiADIAMAA3ADUAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwBiAGYANQBhAGMAMwBkAGUANQBmAGYAOAA0AGMAMwBkAGEAZgAxAGEA
YQBkADIAOQA1ADMAYgAyADAANwA1ADgAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADkAMgAzADcALgAzADcAOQAyADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgAzADcALgAzADcAOQAyADcAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="91.666661658221,55.4666662809584" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>